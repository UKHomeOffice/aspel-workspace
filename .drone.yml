kind: pipeline
name: asl-emailer
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-emailer
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-emailer
  - name: test
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-emailer
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-emailer --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-emailer/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-emailer .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-emailer
      ALLOW_CVE_LIST_FILE: packages/asl-emailer/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-emailer quay.io/ukhomeofficedigital/asl-emailer:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-emailer:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-emailer
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
- name: docker
  image: docker:dind
  environment:
    DOCKER_TLS_CERTDIR: ""

---

kind: pipeline
name: asl-attachments
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-attachments
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-attachments
  - name: test
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-attachments
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-attachments --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-attachments/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-attachments .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-attachments
      ALLOW_CVE_LIST_FILE: packages/asl-attachments/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-attachments quay.io/ukhomeofficedigital/asl-attachments:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-attachments:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-attachments
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
- name: docker
  image: docker:dind
  environment:
    DOCKER_TLS_CERTDIR: ""
- name: anchore-submission-server
  image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/anchore-submission:latest
  pull: always
  commands:
    - /run.sh server

---

kind: pipeline
name: asl-notifications
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-notifications
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-notifications
  - name: test
    image: node:22.14.0
    environment:
      DATABASE_NAME: asl-test
      DATABASE_HOST: postgres
      DATABASE_USERNAME: asl-test
      DATABASE_PASSWORD: test-password
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-notifications
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-notifications --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-notifications/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-notifications .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-notifications
      ALLOW_CVE_LIST_FILE: packages/asl-notifications/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-notifications quay.io/ukhomeofficedigital/asl-notifications:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-notifications:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-notifications
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
- name: docker
  image: docker:dind
  environment:
    DOCKER_TLS_CERTDIR: ""
- name: postgres
  image: postgres
  environment:
    POSTGRES_USER: asl-test
    POSTGRES_PASSWORD: test-password

---

kind: pipeline
name: asl-data-exports
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-data-exports
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-data-exports
  - name: test
    image: node:22.14.0
    environment:
      DATABASE_NAME: asl-test
      DATABASE_HOST: postgres
      DATABASE_USERNAME: asl-test
      DATABASE_PASSWORD: test-password
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-data-exports
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-data-exports --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-data-exports/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-data-exports .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-data-exports
      ALLOW_CVE_LIST_FILE: packages/asl-data-exports/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-data-exports quay.io/ukhomeofficedigital/asl-data-exports:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-data-exports:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-data-exports
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
  - name: docker
    image: docker:dind
    environment:
      DOCKER_TLS_CERTDIR: ""
  - name: postgres
    image: postgres
    environment:
      POSTGRES_USER: asl-test
      POSTGRES_PASSWORD: test-password

---

kind: pipeline
name: asl-metrics
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-metrics
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-metrics
  - name: database setup
    image: postgres
    environment:
      PGHOST: postgres
      PGUSER: postgres
      PGPASSWORD: test-password
    commands:
      - psql -c 'CREATE DATABASE "asl-test"'
      - psql -c 'CREATE DATABASE "taskflow-test"'
  - name: test
    image: node:22.14.0
    environment:
      DATABASE_NAME: asl-test
      DATABASE_HOST: postgres
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: test-password
      WORKFLOW_DATABASE_NAME: taskflow-test
      WORKFLOW_DATABASE_HOST: postgres
      WORKFLOW_DATABASE_USERNAME: postgres
      WORKFLOW_DATABASE_PASSWORD: test-password
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-metrics
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-metrics --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-metrics/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-metrics .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-metrics
      ALLOW_CVE_LIST_FILE: packages/asl-metrics/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-metrics quay.io/ukhomeofficedigital/asl-metrics:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-metrics:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-metrics
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
- name: docker
  image: docker:dind
  environment:
    DOCKER_TLS_CERTDIR: ""
- name: postgres
  image: postgres
  environment:
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: test-password

---

kind: pipeline
name: asl-search
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-search
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-search
  - name: test
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-search
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-search --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-search/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-search .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-search
      ALLOW_CVE_LIST_FILE: packages/asl-search/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-search quay.io/ukhomeofficedigital/asl-search:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-search:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-search
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
  - name: docker
    image: docker:dind
    environment:
      DOCKER_TLS_CERTDIR: ""

---

kind: pipeline
name: asl-permissions
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-permissions
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-permissions
  - name: test
    image: node:22.14.0
    environment:
      DATABASE_NAME: asl-test
      DATABASE_HOST: postgres
      DATABASE_USERNAME: asl-test
      DATABASE_PASSWORD: test-password
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-permissions
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-permissions --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-permissions/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-permissions .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-permissions
      ALLOW_CVE_LIST_FILE: packages/asl-permissions/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-permissions quay.io/ukhomeofficedigital/asl-permissions:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-permissions:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-permissions
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
  - name: docker
    image: docker:dind
    environment:
      DOCKER_TLS_CERTDIR: ""
  - name: postgres
    image: postgres
    environment:
      POSTGRES_USER: asl-test
      POSTGRES_PASSWORD: test-password

---

kind: pipeline
name: asl-internal-api
type: kubernetes

clone:
  disable: true

steps:
  - name: clone
    image: node:22.14.0
    commands:
      - git clone $DRONE_REMOTE_URL .
  - name: changeset
    image: node:22.14.0
    environment:
      TARGET_BRANCH: "${DRONE_TARGET_BRANCH}"
      SOURCE_COMMIT: "${DRONE_COMMIT}"
      BUILD_EVENT: "${DRONE_BUILD_EVENT}"
      SKIP_STATUS: 78
      MODULES: packages/asl-internal-api
    commands:
      - git config advice.detachedHead false
      - git checkout $DRONE_COMMIT
      - node ./ci/changeset.js --modules $MODULES
      - git checkout $DRONE_TARGET_BRANCH
      - git merge $DRONE_COMMIT
      - echo "$(node ./ci/modulepaths.js $MODULES)" > .module-paths
  - name: install
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci --workspace asl-internal-api
  - name: wait postgres
    image: postgres
    environment:
      PGPASSWORD: test-password
    commands:
      - until psql -U asl-test -d asl-test -h postgres -c "SELECT 1;" >/dev/null 2>&1; do sleep 1; done
  - name: test
    image: node:22.14.0
    environment:
      DATABASE_NAME: asl-test
      DATABASE_HOST: postgres
      DATABASE_USERNAME: asl-test
      DATABASE_PASSWORD: test-password
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm run test --workspace asl-internal-api
  - name: audit
    image: node:22.14.0
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm audit --workspace=asl-internal-api --audit-level=high --omit=dev
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build -f ./packages/asl-internal-api/Dockerfile --build-arg MODULE_PATHS="$(cat .module-paths)" --secret id=token,env=ART_AUTH_TOKEN --secret id=github_token,env=GITHUB_AUTH_TOKEN -t asl-internal-api .
  - name: scan-image
    pull: always
    image: 340268328991.dkr.ecr.eu-west-2.amazonaws.com/acp/trivy/client:latest
    resources:
      limits:
        cpu: 1000
        memory: 1024Mi
    environment:
      IMAGE_NAME: asl-internal-api
      ALLOW_CVE_LIST_FILE: packages/asl-internal-api/cve-exceptions.txt
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: quay_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-internal-api quay.io/ukhomeofficedigital/asl-internal-api:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-internal-api:$${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-internal-api
        --version $${DRONE_COMMIT_SHA}
    when:
      event:
        - push
      branch:
        - main

services:
- name: docker
  image: docker:dind
  environment:
    DOCKER_TLS_CERTDIR: ""
- name: postgres
  image: postgres
  environment:
    POSTGRES_USER: asl-test
    POSTGRES_PASSWORD: test-password