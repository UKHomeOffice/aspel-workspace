
kind: pipeline
name: default
type: kubernetes
steps:
  - name: install
    image: node:18
    environment:
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm ci
  - name: wait
    image: postgres
    environment:
      PGPASSWORD: test-password
    commands:
      # wait for postgres service to become available
      - until psql -U asl-test -d asl-test -h postgres -c "SELECT 1;" >/dev/null 2>&1; do sleep 1; done
  - name: test
    image: node:18
    environment:
      DATABASE_NAME: asl-test
      DATABASE_HOST: postgres
      DATABASE_USERNAME: asl-test
      DATABASE_PASSWORD: test-password
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - npm test
  - name: audit
    image: node:18
    environment:
    commands:
      - npm run test:audit
  - name: docker build
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_BUILDKIT: 1
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
    commands:
      - docker build --secret id=github_token,env=GITHUB_AUTH_TOKEN --secret id=token,env=ART_AUTH_TOKEN -t asl-internal-api .
  - name: docker push
    image: docker:dind
    environment:
      DOCKER_HOST: tcp://docker:2375
      ART_AUTH_TOKEN:
        from_secret: art_auth_token
      GITHUB_AUTH_TOKEN:
        from_secret: github_token
      DOCKER_PASSWORD:
        from_secret: docker_password
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-internal-api quay.io/ukhomeofficedigital/asl-internal-api:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-internal-api:$${DRONE_COMMIT_SHA}
    when:
      event: push
      branch: master
  - name: update manifest
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    environment:
      GITHUB_ACCESS_TOKEN:
        from_secret: github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-internal-api
        --version $${DRONE_COMMIT_SHA}
    when:
      event: push
      branch: master

services:
- name: docker
  image: docker:dind
  environment:
    DOCKER_TLS_CERTDIR: ""
- name: postgres
  image: postgres
  environment:
    POSTGRES_USER: asl-test
    POSTGRES_PASSWORD: test-password
