pipeline:

  test:
    image: node:10
    secrets:
      - npm_auth_token
    environment:
      - POSTGRES_USER=asl-test
      - POSTGRES_HOST=database
      - DATABASE_NAME=asl-test
      - DATABASE_HOST=database
      - DATABASE_USERNAME=asl-test
      - REDIS_HOST=redis
    commands:
      - npm ci
      - npm test
    when:
      event:
        - push
        - pull_request

  audit:
    image: node:10
    secrets:
      - npm_auth_token
    commands:
      - npx @lennym/ciaudit
    when:
      event:
        - push
        - pull_request

  build:
    image: docker:17.09.1
    secrets:
      - npm_auth_token
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker build --build-arg NPM_AUTH_USERNAME=$${NPM_AUTH_USERNAME} --build-arg NPM_AUTH_TOKEN=$${NPM_AUTH_TOKEN} -t asl-public-api .
    when:
      branch: master
      event:
        - push
        - pull_request

  image_to_quay:
    image: docker:17.09.1
    secrets:
      - docker_password
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl-public-api quay.io/ukhomeofficedigital/asl-public-api:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-public-api:$${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  update_manifest:
    image: quay.io/ukhomeofficedigital/asl-deploy-bot:latest
    secrets:
      - github_access_token
    commands:
      - update
        --repo ukhomeoffice/asl-deployments
        --token $${GITHUB_ACCESS_TOKEN}
        --file versions.yml
        --service asl-public-api
        --version $${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

services:
  database:
    image: postgres
    environment:
      - POSTGRES_USER=asl-test
  redis:
    image: redis

matrix:
  NPM_AUTH_USERNAME:
    - asl
