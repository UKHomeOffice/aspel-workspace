pipeline:

  test:
    image: node:8
    secrets:
      - npm_auth_token
    commands:
      - npm install
      - npm test
    when:
      event: [push, pull_request]

  build:
    image: docker:17.09.1
    secrets:
      - npm_auth_token
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker build --build-arg NPM_AUTH_USERNAME=$${NPM_AUTH_USERNAME} --build-arg NPM_AUTH_TOKEN=$${NPM_AUTH_TOKEN} -t asl .
    when:
      branch: master
      event: push

  image_to_quay:
    image: docker:17.09.1
    secrets:
      - docker_password
    environment:
      - DOCKER_HOST=tcp://172.17.0.1:2375
    commands:
      - docker login -u="ukhomeofficedigital+asl" -p=$${DOCKER_PASSWORD} quay.io
      - docker tag asl quay.io/ukhomeofficedigital/asl-inspector-ui:$${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/asl-inspector-ui:$${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

  trigger_dev_deploy:
    image: quay.io/ukhomeofficedigital/drone-trigger:latest
    drone_server: https://drone.acp.homeoffice.gov.uk
    repo: UKHomeOffice/asl-deploy-bot
    branch: master
    secrets:
      - drone_token
    params: REPO=${DRONE_REPO},PLUGIN_NUMBER=${DRONE_BUILD_NUMBER}
    deploy_to: dev
    when:
      branch: master
      event: push

  configure_deploy:
    image: node:8
    secrets:
      - npm_auth_token
    commands:
      - mkdir deploy
      - npx kube-cookbook --out deploy
    when:
      environment: dev
      event: deployment

  dev_deploy:
    image: quay.io/ukhomeofficedigital/kd:v0.5.0
    environment:
      KUBE_NAMESPACE: asl-dev
      INSECURE_SKIP_TLS_VERIFY: "TRUE"
    secrets:
      - kube_server
      - kube_token
    commands:
      - kd -f deploy
    when:
      environment: dev
      event: deployment

  slack:
    image: plugins/slack
    secrets:
      - slack_webhook
    channel: developers
    template: >
      {{#success build.status}}
        Deployment of {{repo.name}} to {{build.deployTo}} succeeded.
        `{{build.message}}`
      {{else}}
        @channel Deployment of {{repo.name}} to {{build.deployTo}} failed - {{build.link}}
        `{{build.message}}`
      {{/success}}
    when:
      status:  [ failure, success ]
      event: deployment
      environment:
        - dev
        - preprod

matrix:
  NPM_AUTH_USERNAME:
    - asl
